---
# copied from nf-core
# yaml-language-server: $schema=https://raw.githubusercontent.com/nf-core/modules/master/modules/meta-schema.json
name: "QUILT2_prepare_reference"
description: |
  QUILT2 is an R and C++ program for fast genotype imputation from low-coverage sequence using a large reference panel.
  QUILT2 is accurate and versatile, able to handle imputation from short read, long read, ancient DNA and cell-free DNA from NIPT.
keywords:
  - imputation
  - low-coverage
  - long-read
  - genotype
  - genomics
  - vcf
tools:
  - "quilt2":
      description: "Rapid and accurate genotype imputation from low coverage short read, long read, and cell free DNA sequence."
      homepage: "https://github.com/rwdavies/quilt"
      documentation: "https://github.com/rwdavies/quilt"
      tool_dev_url: "https://github.com/rwdavies/quilt"
      doi: ""
      licence: ['GPL v3']
      identifier: ""

input:
  - - meta:
        type: map
        description: |
          Groovy Map containing sample information
          e.g. [ id:'test', single_end:false ]
    - chr:
        type: string
        description: (Mandatory) What chromosome to run. Should match BAM headers.
    - regions_start:
        type: integer
        description: (Mandatory) When running imputation, where to start from. The 1-based
          position x is kept if regionStart <= x <= regionEnd.
    - regions_end:
        type: integer
        description: (Mandatory) When running imputation, where to stop.
    - reference_vcf_file:
        type: file
        description: (Mandatory) Reference VCF phased panel file.
        pattern: "*.{vcf.gz}"
    - reference_vcf_index:
        type: file
        description: (Mandatory) Reference VCF phased panel file index.
        pattern: "*.{vcf.gz.tbi}"
    - genetic_map_file:
        type: file
        description: (Mandatory) File with genetic map information, a file with 3 white-space
          delimited entries giving position (1-based), genetic rate map in cM/Mbp, and
          genetic map in cM. If no file included, rate is based on physical distance
          and expected rate (expRate).
        pattern: "*.{txt.gz}"
    - buffer:
        type: integer
        description: (Mandatory) Buffer of region to perform imputation over. So imputation is run
          form regionStart-buffer to regionEnd+buffer, and reported for regionStart
          to regionEnd, including the bases of regionStart and regionEnd.
output:
  - rdata:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "RData/*.RData":
          type: file
          description: RData with compressed reference data 
          pattern: "*.{RData}"
  - versions:
      - versions.yml:
          type: file
          description: File containing software versions
          pattern: "versions.yml"

authors:
  - "@Zilong-Li"
maintainers:
  - "@Zilong-Li"
