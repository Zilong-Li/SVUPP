params {
    docker_image = 'quilt2.0.3_942bc94'
    outdir = 'results'                   // output directory
    samples = ''                         // samplesheet with header 'batch,sample,bam,bai,fasta'
    samples2 = ''                        // optional, can be a subset of the main samplesheet
    svfile = ''                          // path to the VCF file with population SVs for regenotyping/force-calling
    refpanel = ''                        // path to the csv file for reference panel with 'chrom,genetic_map,vcf,vcf_index' header
    refdata = ''                         // path to the csv file with 'chunk_id,refpanel_rdata', e.g prepared_reference_rdata.csv
    read_labels = ''                     // path to the output read labels from QUILT
    buffer = 500000                      // mandatory parameter for QUILT
    nGen = 100                           // mandatory parameter for QUILT
    minbp = 4000000                      // Minimum bp, affecting the chunk size used by QUILT for imputation
    mincm = 4                            // Minimum cm, affecting the chunk size used by QUILT for imputation
    quilt_extra_args   = '--bqFilter=10' // extra parameters passsed to QUILT CLI
    quilt_prepare_args = ''              // extra parameters passsed to QUILT_prepare_reference, e.g. --reference_exclude_samplelist_file
    lr = 'ont'                           // specifiy the long read sequencing type. either ont or hifi
    ont = '--min_support 1 --max_cluster_bias_INS 100  --diff_ratio_merging_INS 0.3  --max_cluster_bias_DEL 100  --diff_ratio_merging_DEL 0.3'
    hifi = '--min_support 1 --max_cluster_bias_INS 1000  --diff_ratio_merging_INS 0.9  --max_cluster_bias_DEL 1000  --diff_ratio_merging_DEL 0.5'
}

executor {
    name = "local"
    cpus = 80    // maxmimum number of CPUs for the entire workflow  
}

profiles {
    docker {
        docker.enabled = true
        docker.runOptions = '-u $(id -u):$(id -g)'
        
        process {
            publishDir = [path: { "${params.outdir}/${task.process.toLowerCase().split(':').last()}" }, mode: 'copy']

            withName: 'CUTESV2_RUN:CUTESV2' {
                ext.args = params.lr == 'ont' ? params.ont : params.hifi
                cpus = 6
                memory = '1 GB'
            }

            withName: 'QUILT2_RUN:QUILT2_PHASE' {
                cpus = 1
                memory = '1 GB'
                when: params.docker_image
                container = params.docker_image
            }

            withName: 'QUILT2_RUN:QUILT2_IMPUTE' {
                ext.args = "${params.quilt_extra_args}"
                cpus = 1
                memory = '4 GB'
                when: params.docker_image
                container = params.docker_image
            }

            withName: 'QUILT2_PREPARE_RDATA:QUILT2_PREPARE_REFERENCE' {
                ext.args = "${params.quilt_prepare_args}"
                cpus = 1
                memory = '4 GB'
                when: params.docker_image
                container = params.docker_image
            }

            withName: 'QUILT2_PREPARE_RDATA:QUILT2_PREPARE_CHUNK' {
                cpus = 1
                memory = '1 GB'
                when: params.docker_image
                container = params.docker_image
            }

        }
    }

    conda {
        conda.enabled = true
        process {
            publishDir = [path: { "${params.outdir}/${task.process.toLowerCase().split(':').last()}" }, mode: 'copy']

            withName: 'CUTESV2_RUN:CUTESV2' {
                ext.args = params.lr == 'ont' ? params.ont : params.hifi
                cpus = 6
                memory = '1 GB'
            }
            
            withName: 'QUILT2_RUN:QUILT2_PHASE' {
                cpus = 1
                memory = '1 GB'
                when: params.docker_image
                container = params.docker_image
            }

            withName: 'QUILT2_RUN:QUILT2_IMPUTE' {
                ext.args = "${params.quilt_extra_args}"
                cpus = 1
                memory = '4 GB'
                when: params.docker_image
                container = params.docker_image
            }

            withName: 'QUILT2_PREPARE_RDATA:QUILT2_PREPARE_REFERENCE' {
                ext.args = "${params.quilt_prepare_args}"
                cpus = 1
                memory = '4 GB'
                when: params.docker_image
                container = params.docker_image
            }

            withName: 'QUILT2_PREPARE_RDATA:QUILT2_PREPARE_CHUNK' {
                cpus = 1
                memory = '1 GB'
                when: params.docker_image
                container = params.docker_image
            }

        }
    }
}

